/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import Logica.ClienteLogica;
import Logica.ConsumoLogica;
import Logica.FacturaLogica;
import Beans.Cliente;
import Beans.Consumo;
import Beans.Factura;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
/**
 *
 * @author DERICK ALEXIS
 */
public class HistorialFrame extends javax.swing.JFrame {

    private Dashboard v2;

    public HistorialFrame() {
        initComponents();
        this.setLocationRelativeTo(this);
        configurarEncabezadosTabla(); // Configurar encabezados
        cargarHistorialCompleto(); // Cargar todo el historial por defecto
    }

    public void setV2(Dashboard v2) {
        this.v2 = v2;
    }

    /**
     * Configura los encabezados de la tabla.
     */
    private void configurarEncabezadosTabla() {
        DefaultTableModel modelo = (DefaultTableModel) jTable_historial.getModel();
        modelo.setColumnIdentifiers(new String[]{
                "Nombre Cliente", "Fecha Consumo", "Consumo (m³)", "Monto Factura (S/)", "Estado Pago", "Fecha Vencimiento", "Status"
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton_buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField_buscar_id_dni = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton_atras = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_historial = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton_buscar.setBackground(new java.awt.Color(0, 153, 204));
        jButton_buscar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jButton_buscar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_buscar.setText("Buscar");
        jButton_buscar.setBorder(null);
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel1.setText("Buscar por idusuario o DNI:");

        jTextField_buscar_id_dni.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jTextField_buscar_id_dni, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_buscar_id_dni, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_atras.setBackground(new java.awt.Color(255, 102, 102));
        jButton_atras.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jButton_atras.setForeground(new java.awt.Color(255, 255, 255));
        jButton_atras.setText("Atras");
        jButton_atras.setBorder(null);
        jButton_atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_atrasActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_atras, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 19, 100, 40));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Historial de consumo de usuario");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jLabel4.setBackground(new java.awt.Color(153, 153, 153));
        jLabel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 204, 255));
        jLabel4.setText("Dashboard >  Historial de consumo de usuario");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 150));

        jTable_historial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_historial);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 202, 690, 322));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Carga todo el historial de todos los clientes al iniciar.
     */
    private void cargarHistorialCompleto() {
        DefaultTableModel modelo = (DefaultTableModel) jTable_historial.getModel();
        modelo.setRowCount(0); // Limpiar tabla

        ClienteLogica clienteLogica = new ClienteLogica();
        ConsumoLogica consumoLogica = new ConsumoLogica();
        FacturaLogica facturaLogica = new FacturaLogica();

        List<Cliente> clientes = clienteLogica.obtenerClientes();

        for (Cliente cliente : clientes) {
            int idUsuario = cliente.getIdUsuario();
            List<Consumo> consumos = consumoLogica.obtenerConsumosPorUsuario(idUsuario);
            List<Factura> facturas = facturaLogica.obtenerFacturasPorUsuario(idUsuario);

            for (int i = 0; i < consumos.size(); i++) {
                Consumo consumo = consumos.get(i);
                Factura factura = facturas.get(i); // Se asume una factura por cada consumo

                modelo.addRow(new Object[]{
                        cliente.getNombre(),
                        consumo.getMes(),
                        consumo.getConsumoMensual(),
                        factura.getMonto(),
                        factura.getEstadoPago(),
                        factura.getFechaVencimiento(),
                        factura.getStatus()
                });
            }
        }
    }

    /**
     * Carga el historial de un cliente específico.
     *
     * @param idUsuario ID del usuario.
     */
    private void cargarHistorialPorCliente(int idUsuario) {
        DefaultTableModel modelo = (DefaultTableModel) jTable_historial.getModel();
        modelo.setRowCount(0); // Limpiar tabla

        ClienteLogica clienteLogica = new ClienteLogica();
        ConsumoLogica consumoLogica = new ConsumoLogica();
        FacturaLogica facturaLogica = new FacturaLogica();

        Cliente cliente = clienteLogica.obtenerClientePorId(idUsuario);
        if (cliente != null) {
            List<Consumo> consumos = consumoLogica.obtenerConsumosPorUsuario(idUsuario);
            List<Factura> facturas = facturaLogica.obtenerFacturasPorUsuario(idUsuario);

            for (int i = 0; i < consumos.size(); i++) {
                Consumo consumo = consumos.get(i);
                Factura factura = facturas.get(i); // Se asume una factura por cada consumo

                modelo.addRow(new Object[]{
                        cliente.getNombre(),
                        consumo.getMes(),
                        consumo.getConsumoMensual(),
                        factura.getMonto(),
                        factura.getEstadoPago(),
                        factura.getFechaVencimiento(),
                        factura.getStatus()
                });
            }
        }
    }
    
    private void jButton_atrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_atrasActionPerformed
        // TODO add your handling code here:
        v2.setVisible(true); // Nos regresa atras a la pantalla V2
        this.setVisible(false);
    }//GEN-LAST:event_jButton_atrasActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        // TODO add your handling code here:
        String idODni = jTextField_buscar_id_dni.getText().trim();

        if (idODni.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un ID o DNI para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            cargarHistorialCompleto(); // Cargar todo si no hay búsqueda
            return;
        }

        ClienteLogica clienteLogica = new ClienteLogica();
        int idUsuario = clienteLogica.obtenerIdUsuarioPorDniOId(idODni);

        if (idUsuario == -1) {
            JOptionPane.showMessageDialog(this, "No se encontró un usuario con el ID o DNI proporcionado.", "Error", JOptionPane.ERROR_MESSAGE);
            DefaultTableModel modelo = (DefaultTableModel) jTable_historial.getModel();
            modelo.setRowCount(0); // Limpiar tabla
        } else {
            cargarHistorialPorCliente(idUsuario);
        }
    }//GEN-LAST:event_jButton_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_atras;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_historial;
    private javax.swing.JTextField jTextField_buscar_id_dni;
    // End of variables declaration//GEN-END:variables
}
